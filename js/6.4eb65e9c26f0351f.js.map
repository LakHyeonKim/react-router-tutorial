{"version":3,"sources":["webpack:///./src/components/monitoring/MonitoringComponent.js","webpack:///./src/components/commons/container/SubContainer.js","webpack:///./src/components/sider/SiderComponent.js","webpack:///./src/components/tree/TreeComponent.js"],"names":["MonitoringComponent","props","history","location","match","main","params","id","leftSider","content","SubContainer","children","rightSider","className","style","overflow","minHeight","height","padding","SiderComponent","Sider","width","collapsed","alignItems","span","marginRight","marginLeft","margin","treeData","title","key","treeComponent","onSelect","onSelectResource","useContext","Context","justify","align","param","length","defaultExpandAll","defaultExpandedKeys"],"mappings":"0VAIMA,EAAsB,SAAAC,GACaA,EAA7BC,QAA6BD,EAApBE,SADgB,IACNC,EAAUH,EAAVG,MAErBC,EAAO,6BAAMD,EAAME,OAAOC,GAAnB,KACb,OAAO,kBAAC,IAAD,CAAcC,UAAW,kBAAC,IAAD,MAAoBC,QAASJ,K,EAGlDL,EAAA,a,6FAPTA,E,woBCDAU,EAAe,SAAAT,GAAS,IAClBO,EAA6CP,EAA7CO,UAAWG,EAAkCV,EAAlCU,SAAUF,EAAwBR,EAAxBQ,QAASG,EAAeX,EAAfW,WAEtC,OACI,uBAAQC,UAAU,sBACd,oCACKL,EACD,uBACIM,MAAO,CACHC,SAAU,SACVC,UAAW,qBACXC,OAAQ,qBACRC,QAAS,GAEbL,UAAU,2BAETF,GAAYF,GAEhBG,K,EAMFF,EAAA,O,6FAxBTA,E,kwBCEAS,EAAiB,SAAAlB,GAGnB,OAH4B,IACjBA,GAGP,sBAAQmB,MAAR,CACIC,MAAO,IACPd,GAAG,2BACHM,UAAU,2BAEVS,WAAW,GAEX,uBAAKR,MAAO,CAAEG,OAAQ,OAAQM,WAAY,WACtC,uBAAKC,KAAM,IACP,kBAAC,IAAD,CACIV,MAAO,CAAEW,YAAa,EAAGC,WAAY,KAEzC,sCAGR,uBAASZ,MAAO,CAAEa,OAAQ,iBAC1B,uBAAKb,MAAO,CAAEG,OAAQ,OAAQM,WAAY,WACtC,uBAAKC,KAAM,IACP,kBAAC,IAAD,U,EAOLL,EAAA,O,6FA7BTA,E,ysBCDAS,EAAW,CACb,CACIC,MAAO,MACPC,IAAK,MACLnB,SAAU,CACN,CACIkB,MAAO,QACPC,IAAK,QACLnB,SAAU,CACN,CACIkB,MAAO,UACPC,IAAK,WAET,CACID,MAAO,UACPC,IAAK,aAIjB,CACID,MAAO,QACPC,IAAK,QACLnB,SAAU,CACN,CACIkB,MAAO,UACPC,IAAK,WAET,CACID,MAAO,UACPC,IAAK,gBAQvBC,EAAgB,SAAA9B,GACcA,EAAxB+B,SADmB,IAGnBC,EAAqBC,qBAAWC,KAAhCF,iBAQR,OACI,uBAAKG,QAAQ,OAAOC,MAAM,UACtB,uBAAKb,KAAM,IACP,uBACIQ,SAVK,SAAAM,GACI,IAAjBA,EAAMC,QAGVN,EAAiBK,IAOLE,kBAAgB,EAChBC,oBAAqB,CAAC,OACtBb,SAAUA,O,EAlBxBG,E,8CAyBSA,EAAA,O,6FA9DTH,E,sHAqCAG,E","file":"js/6.4eb65e9c26f0351f.js","sourcesContent":["import React from 'react'\r\nimport SiderComponent from '../sider/SiderComponent'\r\nimport SubContainer from '../commons/container/SubContainer'\r\n\r\nconst MonitoringComponent = props => {\r\n    const { history, location, match } = props\r\n\r\n    const main = <div>{match.params.id} </div>\r\n    return <SubContainer leftSider={<SiderComponent />} content={main} />\r\n}\r\n\r\nexport default MonitoringComponent\r\n","import React from 'react'\r\nimport { Layout } from 'antd'\r\n\r\nconst SubContainer = props => {\r\n    const { leftSider, children, content, rightSider } = props\r\n\r\n    return (\r\n        <Layout className=\"ant-content-layout\">\r\n            <>\r\n                {leftSider}\r\n                <Layout\r\n                    style={{\r\n                        overflow: 'hidden',\r\n                        minHeight: 'calc(100vh - 87px)',\r\n                        height: 'calc(100vh - 87px)',\r\n                        padding: 0,\r\n                    }}\r\n                    className=\"ant-content-layout-main\"\r\n                >\r\n                    {children || content}\r\n                </Layout>\r\n                {rightSider}\r\n            </>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default SubContainer\r\n","import React from 'react'\r\nimport { Layout, Col, Row, Divider } from 'antd'\r\nimport { ApartmentOutlined } from '@ant-design/icons'\r\nimport TreeComponent from '../tree/TreeComponent'\r\n\r\nconst SiderComponent = props => {\r\n    const {} = props\r\n\r\n    return (\r\n        <Layout.Sider\r\n            width={320}\r\n            id=\"ant-content-layout-sider\"\r\n            className=\"ant-content-layout-sider\"\r\n            // collapsedWidth=\"0\"\r\n            collapsed={false}\r\n        >\r\n            <Row style={{ height: '35px', alignItems: 'center' }}>\r\n                <Col span={24}>\r\n                    <ApartmentOutlined\r\n                        style={{ marginRight: 8, marginLeft: 8 }}\r\n                    />\r\n                    <span>트리</span>\r\n                </Col>\r\n            </Row>\r\n            <Divider style={{ margin: '5px 0 5px 0' }} />\r\n            <Row style={{ height: '35px', alignItems: 'center' }}>\r\n                <Col span={24}>\r\n                    <TreeComponent />\r\n                </Col>\r\n            </Row>\r\n        </Layout.Sider>\r\n    )\r\n}\r\n\r\nexport default SiderComponent\r\n","import React, { useContext } from 'react'\r\nimport { Col, Row, Tree } from 'antd'\r\nimport Context from '../commons/container/Context'\r\n\r\nconst treeData = [\r\n    {\r\n        title: '0-0',\r\n        key: '0-0',\r\n        children: [\r\n            {\r\n                title: '0-0-0',\r\n                key: '0-0-0',\r\n                children: [\r\n                    {\r\n                        title: '0-0-0-0',\r\n                        key: '0-0-0-0',\r\n                    },\r\n                    {\r\n                        title: '0-0-0-1',\r\n                        key: '0-0-0-1',\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                title: '0-0-1',\r\n                key: '0-0-1',\r\n                children: [\r\n                    {\r\n                        title: '0-0-1-0',\r\n                        key: '0-0-1-0',\r\n                    },\r\n                    {\r\n                        title: '0-0-1-1',\r\n                        key: '0-0-1-1',\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n]\r\n\r\nconst treeComponent = props => {\r\n    const { onSelect = () => {} } = props\r\n\r\n    const { onSelectResource } = useContext(Context)\r\n\r\n    const onSelectTree = param => {\r\n        if (param.length === 0) {\r\n            return\r\n        }\r\n        onSelectResource(param)\r\n    }\r\n    return (\r\n        <Row justify=\"left\" align=\"middle\">\r\n            <Col span={12}>\r\n                <Tree\r\n                    onSelect={onSelectTree}\r\n                    defaultExpandAll\r\n                    defaultExpandedKeys={['0-0']}\r\n                    treeData={treeData}\r\n                />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default treeComponent\r\n"],"sourceRoot":""}